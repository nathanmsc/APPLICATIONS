import { type Ref } from "vue";
import type { IInlineProps } from "../../composables/base/useInline";
export declare const ValidateProps: {
    validation: {
        type: BooleanConstructor;
    };
    wasVlidated: {
        type: BooleanConstructor;
    };
};
export interface IValidateionProps extends IInlineProps {
    validation?: boolean;
    wasVlidated?: boolean;
}
export declare function useValidate<P extends IValidateionProps>(props: P, elementRef: Ref<HTMLElement | undefined>): {
    class?: undefined;
    attr?: undefined;
    event?: undefined;
} | {
    class: import("vue").ComputedRef<{
        "was-validated": boolean;
    }>;
    attr: import("vue").ComputedRef<{
        [x: string]: string | undefined;
    }>;
    event: {
        onSubmit: (event: Event) => void;
    };
};
