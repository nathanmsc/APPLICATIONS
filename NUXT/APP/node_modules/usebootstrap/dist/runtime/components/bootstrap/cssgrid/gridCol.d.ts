declare const _default: import("vue").DefineComponent<{
    tag: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: (StringConstructor | NumberConstructor | ArrayConstructor)[];
        default: undefined;
    };
    colmunStart: {
        type: NumberConstructor;
        default: undefined;
    };
    row: {
        type: NumberConstructor;
        default: undefined;
    };
    span: {
        type: NumberConstructor;
        default: undefined;
    };
    overlay: {
        type: BooleanConstructor;
    };
    shadow: {
        type: (StringConstructor | BooleanConstructor)[];
    };
    textAlignment: {
        type: StringConstructor;
    };
    textWrap: {
        type: StringConstructor;
    };
    textBreak: {
        type: BooleanConstructor;
    };
    alignSelf: {
        type: StringConstructor;
    };
    alignItems: {
        type: StringConstructor;
    };
    alignContent: {
        type: StringConstructor;
    };
    flex: {
        type: (StringConstructor | BooleanConstructor | ArrayConstructor)[];
    };
    flexDirection: {
        type: (StringConstructor | ArrayConstructor)[];
    };
    flexFill: {
        type: (StringConstructor | BooleanConstructor)[];
    };
    flexGrow: {
        type: StringConstructor;
    };
    flexHorizontal: {
        type: StringConstructor;
    };
    flexVirtical: {
        type: StringConstructor;
    };
    flexOrder: {
        type: (StringConstructor | NumberConstructor)[];
    };
    flexWrap: {
        type: StringConstructor;
    };
    float: {
        type: StringConstructor;
    };
    ratio: {
        type: (StringConstructor | BooleanConstructor | NumberConstructor)[];
    };
    fixed: {
        type: StringConstructor;
    };
    sticky: {
        type: StringConstructor;
    };
    clearfix: {
        type: BooleanConstructor;
    };
    overflow: {
        type: StringConstructor;
    };
    tableResponsive: {
        type: StringConstructor;
    };
    justifyContent: {
        type: StringConstructor;
    };
    vstack: {
        type: BooleanConstructor;
    };
    hstack: {
        type: BooleanConstructor;
    };
    align: {
        type: StringConstructor[];
    };
    order: {
        type: (StringConstructor | NumberConstructor)[];
    };
    offset: {
        type: (StringConstructor | NumberConstructor | ArrayConstructor)[];
    };
    objectFit: {
        type: StringConstructor[];
    };
    z: {
        type: (StringConstructor | NumberConstructor)[];
    };
    theme: {
        type: StringConstructor[];
    };
    fontSize: {
        type: (StringConstructor | NumberConstructor)[];
    };
    fontWeight: {
        type: StringConstructor;
    };
    fontStyle: {
        type: StringConstructor;
    };
    lineHeight: {
        type: StringConstructor;
    };
    fontMonospace: {
        type: BooleanConstructor;
    };
    fontFamily: {
        type: StringConstructor;
    };
    textReset: {
        type: BooleanConstructor;
    };
    textDecoration: {
        type: StringConstructor;
    };
    textTruncate: {
        type: BooleanConstructor;
    };
    textOpacity: {
        type: (StringConstructor | NumberConstructor)[];
    };
    textTransform: {
        type: StringConstructor;
    };
    textBackground: {
        type: StringConstructor;
    };
    headings: {
        type: (StringConstructor | NumberConstructor)[];
    };
    lead: {
        type: BooleanConstructor;
    };
    mark: {
        type: BooleanConstructor;
    };
    small: {
        type: BooleanConstructor;
    };
    textColor: {
        type: StringConstructor;
    };
    padding: {
        type: (StringConstructor | NumberConstructor | ArrayConstructor)[];
    };
    margin: {
        type: (StringConstructor | NumberConstructor | ArrayConstructor)[];
    };
    display: {
        type: (StringConstructor | ArrayConstructor)[];
    };
    gap: {
        type: (StringConstructor | NumberConstructor | ArrayConstructor)[];
    };
    visuallyHidden: {
        type: (StringConstructor | BooleanConstructor)[];
    };
    verticalAlign: {
        type: StringConstructor;
    };
    invisible: {
        type: BooleanConstructor;
    };
    userSelect: {
        type: StringConstructor;
    };
    pointerEvents: {
        type: StringConstructor;
    };
    backgroundColor: {
        type: StringConstructor;
    };
    backgroundGradient: {
        type: BooleanConstructor;
    };
    backgroundImage: {
        type: StringConstructor;
    };
    backgroundOpacity: {
        type: (StringConstructor | NumberConstructor)[];
    };
    opacity: {
        type: (StringConstructor | NumberConstructor)[];
    };
    relativeWidth: {
        type: (StringConstructor | NumberConstructor)[];
    };
    relativeHeight: {
        type: (StringConstructor | NumberConstructor)[];
    };
    maxWidth: {
        type: BooleanConstructor;
    };
    maxHeight: {
        type: BooleanConstructor;
    };
    viewportWidth: {
        type: BooleanConstructor;
    };
    viewportHeight: {
        type: BooleanConstructor;
    };
    minViewportWidth: {
        type: BooleanConstructor;
    };
    minViewportHeight: {
        type: BooleanConstructor;
    };
    placeholder: {
        type: (StringConstructor | BooleanConstructor)[];
    };
    placeholderSize: {
        type: StringConstructor;
    };
    col: {
        type: (StringConstructor | BooleanConstructor | NumberConstructor | ArrayConstructor)[];
    };
    position: {
        type: StringConstructor;
    };
    top: {
        type: (StringConstructor | NumberConstructor)[];
    };
    start: {
        type: (StringConstructor | NumberConstructor)[];
    };
    end: {
        type: (StringConstructor | NumberConstructor)[];
    };
    bottom: {
        type: (StringConstructor | NumberConstructor)[];
    };
    translate: {
        type: StringConstructor;
    };
    initialism: {
        type: BooleanConstructor[];
    };
    focusRing: {
        type: BooleanConstructor[];
    };
    border: {
        type: (StringConstructor | BooleanConstructor | NumberConstructor)[];
    };
    borderColor: {
        type: StringConstructor;
    };
    borderWidth: {
        type: (StringConstructor | NumberConstructor)[];
    };
    rounded: {
        type: (StringConstructor | BooleanConstructor)[];
    };
    roundedSize: {
        type: (StringConstructor | NumberConstructor)[];
    };
    linkOpacity: {
        type: (StringConstructor | NumberConstructor)[];
    };
    linkUnderline: {
        type: StringConstructor[];
    };
    linkOffset: {
        type: (StringConstructor | NumberConstructor)[];
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    tag: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: (StringConstructor | NumberConstructor | ArrayConstructor)[];
        default: undefined;
    };
    colmunStart: {
        type: NumberConstructor;
        default: undefined;
    };
    row: {
        type: NumberConstructor;
        default: undefined;
    };
    span: {
        type: NumberConstructor;
        default: undefined;
    };
    overlay: {
        type: BooleanConstructor;
    };
    shadow: {
        type: (StringConstructor | BooleanConstructor)[];
    };
    textAlignment: {
        type: StringConstructor;
    };
    textWrap: {
        type: StringConstructor;
    };
    textBreak: {
        type: BooleanConstructor;
    };
    alignSelf: {
        type: StringConstructor;
    };
    alignItems: {
        type: StringConstructor;
    };
    alignContent: {
        type: StringConstructor;
    };
    flex: {
        type: (StringConstructor | BooleanConstructor | ArrayConstructor)[];
    };
    flexDirection: {
        type: (StringConstructor | ArrayConstructor)[];
    };
    flexFill: {
        type: (StringConstructor | BooleanConstructor)[];
    };
    flexGrow: {
        type: StringConstructor;
    };
    flexHorizontal: {
        type: StringConstructor;
    };
    flexVirtical: {
        type: StringConstructor;
    };
    flexOrder: {
        type: (StringConstructor | NumberConstructor)[];
    };
    flexWrap: {
        type: StringConstructor;
    };
    float: {
        type: StringConstructor;
    };
    ratio: {
        type: (StringConstructor | BooleanConstructor | NumberConstructor)[];
    };
    fixed: {
        type: StringConstructor;
    };
    sticky: {
        type: StringConstructor;
    };
    clearfix: {
        type: BooleanConstructor;
    };
    overflow: {
        type: StringConstructor;
    };
    tableResponsive: {
        type: StringConstructor;
    };
    justifyContent: {
        type: StringConstructor;
    };
    vstack: {
        type: BooleanConstructor;
    };
    hstack: {
        type: BooleanConstructor;
    };
    align: {
        type: StringConstructor[];
    };
    order: {
        type: (StringConstructor | NumberConstructor)[];
    };
    offset: {
        type: (StringConstructor | NumberConstructor | ArrayConstructor)[];
    };
    objectFit: {
        type: StringConstructor[];
    };
    z: {
        type: (StringConstructor | NumberConstructor)[];
    };
    theme: {
        type: StringConstructor[];
    };
    fontSize: {
        type: (StringConstructor | NumberConstructor)[];
    };
    fontWeight: {
        type: StringConstructor;
    };
    fontStyle: {
        type: StringConstructor;
    };
    lineHeight: {
        type: StringConstructor;
    };
    fontMonospace: {
        type: BooleanConstructor;
    };
    fontFamily: {
        type: StringConstructor;
    };
    textReset: {
        type: BooleanConstructor;
    };
    textDecoration: {
        type: StringConstructor;
    };
    textTruncate: {
        type: BooleanConstructor;
    };
    textOpacity: {
        type: (StringConstructor | NumberConstructor)[];
    };
    textTransform: {
        type: StringConstructor;
    };
    textBackground: {
        type: StringConstructor;
    };
    headings: {
        type: (StringConstructor | NumberConstructor)[];
    };
    lead: {
        type: BooleanConstructor;
    };
    mark: {
        type: BooleanConstructor;
    };
    small: {
        type: BooleanConstructor;
    };
    textColor: {
        type: StringConstructor;
    };
    padding: {
        type: (StringConstructor | NumberConstructor | ArrayConstructor)[];
    };
    margin: {
        type: (StringConstructor | NumberConstructor | ArrayConstructor)[];
    };
    display: {
        type: (StringConstructor | ArrayConstructor)[];
    };
    gap: {
        type: (StringConstructor | NumberConstructor | ArrayConstructor)[];
    };
    visuallyHidden: {
        type: (StringConstructor | BooleanConstructor)[];
    };
    verticalAlign: {
        type: StringConstructor;
    };
    invisible: {
        type: BooleanConstructor;
    };
    userSelect: {
        type: StringConstructor;
    };
    pointerEvents: {
        type: StringConstructor;
    };
    backgroundColor: {
        type: StringConstructor;
    };
    backgroundGradient: {
        type: BooleanConstructor;
    };
    backgroundImage: {
        type: StringConstructor;
    };
    backgroundOpacity: {
        type: (StringConstructor | NumberConstructor)[];
    };
    opacity: {
        type: (StringConstructor | NumberConstructor)[];
    };
    relativeWidth: {
        type: (StringConstructor | NumberConstructor)[];
    };
    relativeHeight: {
        type: (StringConstructor | NumberConstructor)[];
    };
    maxWidth: {
        type: BooleanConstructor;
    };
    maxHeight: {
        type: BooleanConstructor;
    };
    viewportWidth: {
        type: BooleanConstructor;
    };
    viewportHeight: {
        type: BooleanConstructor;
    };
    minViewportWidth: {
        type: BooleanConstructor;
    };
    minViewportHeight: {
        type: BooleanConstructor;
    };
    placeholder: {
        type: (StringConstructor | BooleanConstructor)[];
    };
    placeholderSize: {
        type: StringConstructor;
    };
    col: {
        type: (StringConstructor | BooleanConstructor | NumberConstructor | ArrayConstructor)[];
    };
    position: {
        type: StringConstructor;
    };
    top: {
        type: (StringConstructor | NumberConstructor)[];
    };
    start: {
        type: (StringConstructor | NumberConstructor)[];
    };
    end: {
        type: (StringConstructor | NumberConstructor)[];
    };
    bottom: {
        type: (StringConstructor | NumberConstructor)[];
    };
    translate: {
        type: StringConstructor;
    };
    initialism: {
        type: BooleanConstructor[];
    };
    focusRing: {
        type: BooleanConstructor[];
    };
    border: {
        type: (StringConstructor | BooleanConstructor | NumberConstructor)[];
    };
    borderColor: {
        type: StringConstructor;
    };
    borderWidth: {
        type: (StringConstructor | NumberConstructor)[];
    };
    rounded: {
        type: (StringConstructor | BooleanConstructor)[];
    };
    roundedSize: {
        type: (StringConstructor | NumberConstructor)[];
    };
    linkOpacity: {
        type: (StringConstructor | NumberConstructor)[];
    };
    linkUnderline: {
        type: StringConstructor[];
    };
    linkOffset: {
        type: (StringConstructor | NumberConstructor)[];
    };
}>>, {
    mark: boolean;
    small: boolean;
    span: number;
    tag: string;
    maxHeight: boolean;
    maxWidth: boolean;
    fontMonospace: boolean;
    textReset: boolean;
    textTruncate: boolean;
    lead: boolean;
    invisible: boolean;
    backgroundGradient: boolean;
    viewportWidth: boolean;
    viewportHeight: boolean;
    minViewportWidth: boolean;
    minViewportHeight: boolean;
    textBreak: boolean;
    overlay: boolean;
    clearfix: boolean;
    vstack: boolean;
    hstack: boolean;
    size: string | number | unknown[];
    row: number;
    colmunStart: number;
}, {}>;
export default _default;
